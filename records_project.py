# -*- coding: utf-8 -*-
"""Records project.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ybcdFrEBUrLTuPODpGVWqteIUObTWMgD
"""



"""**Records Project**

In this project I managed a collection of records.
Each record has a unique name, and several copies (possibly more than a single copy).
The software displays a text menu for the user and depending on the user's selection the actions will be performed. ⏭
Project planning was through main functions. And some had sub-functions (auxiliary functions) according to the identification of a particular common behavior.⏺
"""

project_records = {"Hello " : 2
                   ,"Who run the world " : 1
                   ,"Big moon " : 100
                   ,"New soul": 90}


def check_input_amount():
    amount = int(input("Put your records here: "))
    while amount < 1:
        print("Error input")
        amount = int(input("Put your records here: "))
    else:
        return amount

def check_amount():
    good_input = False
    while not good_input:
        try:
            amount = check_input_amount()
            good_input = True
        except Exception as e:
            print("err - ", e)
    return amount

def check():
    enter_input = False
    while not enter_input:
        record = input("Enter a record name: ")
        if all(x.isalpha() or x.isspace() for x in record):
            record_name = record
            enter_input = True
    return record_name

def search(record_name):
    if record_name in project_records:
        return {record_name: project_records.get(record_name)}
    else:
        print("Record not found")
        return

def f3():
    print("Search record by name")
    record_name = check()
    search(record_name)

def adding(record_name, amount):
    if search(record_name) == None:
        project_records.update({record_name: amount})
        print("The new record insert-", record_name, ", the records are-", amount)
    else:
        amount = amount + project_records.get(record_name)
        project_records[record_name] = amount
        print("The record insert-", record_name, ", the new records are-", amount)

def f1():
    print("You choose to add a record")
    record_name = check()
    amount = check_amount()
    adding(record_name, amount)

def update_name(record_name, new_record):
    if search(record_name) != None:
        project_records[new_record] = project_records.pop(record_name)
        print("The new record name-", new_record, ", the old record name is-", record_name)
    else:
        print("The record is not found")

def f4():
    print("You choose to update name")
    record_name = check()
    if search(record_name) == None:
        return
    else:
        new_record = check()
        update_name(record_name, new_record)

def update_amount(record_name, amount):
    if search(record_name) != None:
        if amount < 1:
            print("Error amount, enter number bigger")
        project_records[record_name] = amount
        print("Record", record_name, "got update to-", amount)
    else:
        print("The record is not found")

def f5():
    print("You choose to update record amount")
    record_name = check()
    if search(record_name) == None:
        return
    else:
        amount = check_amount()
        update_amount(record_name, amount)

def delete(record_name, amount):
    if search(record_name):
        if project_records.get(record_name) > amount:
            amount = project_records.get(record_name) - amount
            project_records[record_name] = amount
            print("record", record_name, "got update to :",  project_records[record_name] )
        elif project_records.get(record_name) == amount:
            del project_records[record_name]
            print("Record", record_name, "got deleted from the project.")
        elif project_records.get(record_name) < amount:
            print("Error amount ")
    else:
        print("The record not found ")

def f2():
    print("You choose to delete a record")
    record_name = check()
    if search(record_name) == None:
        return
    else:
        amount = check_amount()
        delete(record_name, amount)

def sum_amount():
    sum = 0
    for k, v in project_records.items():
        sum = sum + v
    if sum > 0:
        print("The amount is:", sum)
    else:
        print("There is not records in the file")

def f6():
    print("You choose to show the total amount of records")
    sum_amount()

def sorted_rec():
    if project_records != {}:
        dicd_items = project_records.items()
        sort_items = sorted(dicd_items)
        sort_items1 = dict(sort_items)
        for i,j in sort_items1.items():
          print(i,":",j, end = '\n')
          print('****************')
    else:
        print("There is no records in the file")

def f7():
    print("You choose to show the sorted collection of the project records")
    sorted_rec()
def f8():
    print("You choose to Exit the program !")
def f9():
    print("ERROR - Wrong input choice")

do_continue = True

print("\033[1;35;4mWelcome to the Project Records !\033[0m")
print("""
  1. Add a record
  2. Delete a record
  3. Search by name
  4. Update name
  5. Quantity update
  6. Total amount of records
  7. Sorted collection 
  8. Exit the program
  """)

while do_continue:
    print("\033[1;4mPlease choose your option from top Menu:\033[0m")
    output_to_user = input()
    if output_to_user == '1':
        f1()
    elif output_to_user == '2':
        ans = input("Are you sure:\n1.YES\n2.NO\n")
        if ans == 'YES' or ans == "1" or ans == "yes":
            f2()
        else:
            print("You Choose to Not Delete a Record")

    elif output_to_user == '3':
        f3()
    elif output_to_user == '4':
        f4()
    elif output_to_user == '5':
        f5()
    elif output_to_user == '6':
        f6()
    elif output_to_user == '7':
        f7()
    elif output_to_user == '8':
        f8()
        do_continue = False
        print("\033[1;32;3mThank you and Good Bye :)\033[0m")
    else:
        output_to_user == '9'
        f9()